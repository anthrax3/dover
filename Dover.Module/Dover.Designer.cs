//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("doverModel", "FK_ModuleField_FieldDataType", "FieldDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.FieldDataType), "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Field))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Row_Module1", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Module), "Row", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Row))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Field_Module", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Module), "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Field))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_FieldMetadata_Field", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Field), "FieldMetadata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.FieldMetadata))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Module_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.User), "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Module))]
[assembly: EdmRelationshipAttribute("doverModel", "Accountaspnet_Users", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Account), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.User))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Module_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Com.Dover.Modules.Account), "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Module))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_UsageCounter_Module", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Module), "UsageCounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.UsageCounter))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_ModuleRow_Field_Field", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Field), "Cell", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Cell))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_ModuleRow_Field_ModuleRow", "Row", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Row), "Cell", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Cell))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Account_Plan", "Plan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Plan), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Account))]
[assembly: EdmRelationshipAttribute("doverModel", "FK_Payment_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Com.Dover.Modules.Account), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Com.Dover.Modules.Payment))]

#endregion

namespace Com.Dover.Modules
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    internal partial class DoverEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DoverEntities object using the connection string found in the 'DoverEntities' section of the application configuration file.
        /// </summary>
        public DoverEntities() : base("name=DoverEntities", "DoverEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DoverEntities object.
        /// </summary>
        public DoverEntities(string connectionString) : base(connectionString, "DoverEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DoverEntities object.
        /// </summary>
        public DoverEntities(EntityConnection connection) : base(connection, "DoverEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Field
        {
            get
            {
                if ((_Field == null))
                {
                    _Field = base.CreateObjectSet<Field>("Field");
                }
                return _Field;
            }
        }
        private ObjectSet<Field> _Field;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldDataType> FieldDataType
        {
            get
            {
                if ((_FieldDataType == null))
                {
                    _FieldDataType = base.CreateObjectSet<FieldDataType>("FieldDataType");
                }
                return _FieldDataType;
            }
        }
        private ObjectSet<FieldDataType> _FieldDataType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Row> Row
        {
            get
            {
                if ((_Row == null))
                {
                    _Row = base.CreateObjectSet<Row>("Row");
                }
                return _Row;
            }
        }
        private ObjectSet<Row> _Row;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module> Module
        {
            get
            {
                if ((_Module == null))
                {
                    _Module = base.CreateObjectSet<Module>("Module");
                }
                return _Module;
            }
        }
        private ObjectSet<Module> _Module;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldMetadata> FieldMetadata
        {
            get
            {
                if ((_FieldMetadata == null))
                {
                    _FieldMetadata = base.CreateObjectSet<FieldMetadata>("FieldMetadata");
                }
                return _FieldMetadata;
            }
        }
        private ObjectSet<FieldMetadata> _FieldMetadata;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Account
        {
            get
            {
                if ((_Account == null))
                {
                    _Account = base.CreateObjectSet<Account>("Account");
                }
                return _Account;
            }
        }
        private ObjectSet<Account> _Account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsageCounter> UsageCounter
        {
            get
            {
                if ((_UsageCounter == null))
                {
                    _UsageCounter = base.CreateObjectSet<UsageCounter>("UsageCounter");
                }
                return _UsageCounter;
            }
        }
        private ObjectSet<UsageCounter> _UsageCounter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cell> Cell
        {
            get
            {
                if ((_Cell == null))
                {
                    _Cell = base.CreateObjectSet<Cell>("Cell");
                }
                return _Cell;
            }
        }
        private ObjectSet<Cell> _Cell;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payment
        {
            get
            {
                if ((_Payment == null))
                {
                    _Payment = base.CreateObjectSet<Payment>("Payment");
                }
                return _Payment;
            }
        }
        private ObjectSet<Payment> _Payment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plan> Plan
        {
            get
            {
                if ((_Plan == null))
                {
                    _Plan = base.CreateObjectSet<Plan>("Plan");
                }
                return _Plan;
            }
        }
        private ObjectSet<Plan> _Plan;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Field EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToField(Field field)
        {
            base.AddObject("Field", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldDataType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldDataType(FieldDataType fieldDataType)
        {
            base.AddObject("FieldDataType", fieldDataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Row EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRow(Row row)
        {
            base.AddObject("Row", row);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Module EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModule(Module module)
        {
            base.AddObject("Module", module);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldMetadata EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldMetadata(FieldMetadata fieldMetadata)
        {
            base.AddObject("FieldMetadata", fieldMetadata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccount(Account account)
        {
            base.AddObject("Account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsageCounter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsageCounter(UsageCounter usageCounter)
        {
            base.AddObject("UsageCounter", usageCounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cell EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCell(Cell cell)
        {
            base.AddObject("Cell", cell);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayment(Payment payment)
        {
            base.AddObject("Payment", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plan EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlan(Plan plan)
        {
            base.AddObject("Plan", plan);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetRowFieldBytes_Result> GetRowFieldBytes()
        {
            return base.ExecuteFunction<GetRowFieldBytes_Result>("GetRowFieldBytes");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="subdomainName">Initial value of the SubdomainName property.</param>
        public static Account CreateAccount(global::System.Int32 id, global::System.String name, global::System.String subdomainName)
        {
            Account account = new Account();
            account.Id = id;
            account.Name = name;
            account.SubdomainName = subdomainName;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubdomainName
        {
            get
            {
                return _SubdomainName;
            }
            set
            {
                OnSubdomainNameChanging(value);
                ReportPropertyChanging("SubdomainName");
                _SubdomainName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubdomainName");
                OnSubdomainNameChanged();
            }
        }
        private global::System.String _SubdomainName;
        partial void OnSubdomainNameChanging(global::System.String value);
        partial void OnSubdomainNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteUrl
        {
            get
            {
                return _SiteUrl;
            }
            set
            {
                OnSiteUrlChanging(value);
                ReportPropertyChanging("SiteUrl");
                _SiteUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteUrl");
                OnSiteUrlChanged();
            }
        }
        private global::System.String _SiteUrl;
        partial void OnSiteUrlChanging(global::System.String value);
        partial void OnSiteUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "Accountaspnet_Users", "aspnet_Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("doverModel.Accountaspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("doverModel.Accountaspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Module_Account", "Module")]
        public EntityCollection<Module> Modules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module>("doverModel.FK_Module_Account", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module>("doverModel.FK_Module_Account", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Account_Plan", "Plan")]
        public Plan Plan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("doverModel.FK_Account_Plan", "Plan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("doverModel.FK_Account_Plan", "Plan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Plan> PlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Plan>("doverModel.FK_Account_Plan", "Plan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Plan>("doverModel.FK_Account_Plan", "Plan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Payment_Account", "Payment")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("doverModel.FK_Payment_Account", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("doverModel.FK_Payment_Account", "Payment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Cell")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cell : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cell object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Cell CreateCell(global::System.Int32 id)
        {
            Cell cell = new Cell();
            cell.ID = id;
            return cell;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleRow_Field_Field", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_ModuleRow_Field_Field", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_ModuleRow_Field_Field", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_ModuleRow_Field_Field", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("doverModel.FK_ModuleRow_Field_Field", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleRow_Field_ModuleRow", "Row")]
        public Row Row
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Row>("doverModel.FK_ModuleRow_Field_ModuleRow", "Row").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Row>("doverModel.FK_ModuleRow_Field_ModuleRow", "Row").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Row> RowReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Row>("doverModel.FK_ModuleRow_Field_ModuleRow", "Row");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Row>("doverModel.FK_ModuleRow_Field_ModuleRow", "Row", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="showInListMode">Initial value of the ShowInListMode property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="isRequired">Initial value of the IsRequired property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static Field CreateField(global::System.Int32 id, global::System.Boolean showInListMode, global::System.String displayName, global::System.String fieldName, global::System.Boolean isRequired, global::System.Boolean isReadOnly)
        {
            Field field = new Field();
            field.ID = id;
            field.ShowInListMode = showInListMode;
            field.DisplayName = displayName;
            field.FieldName = fieldName;
            field.IsRequired = isRequired;
            field.IsReadOnly = isReadOnly;
            return field;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInListMode
        {
            get
            {
                return _ShowInListMode;
            }
            set
            {
                OnShowInListModeChanging(value);
                ReportPropertyChanging("ShowInListMode");
                _ShowInListMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowInListMode");
                OnShowInListModeChanged();
            }
        }
        private global::System.Boolean _ShowInListMode;
        partial void OnShowInListModeChanging(global::System.Boolean value);
        partial void OnShowInListModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _SortIndex;
        partial void OnSortIndexChanging(Nullable<global::System.Int32> value);
        partial void OnSortIndexChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleField_FieldDataType", "FieldDataType")]
        public FieldDataType FieldDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDataType>("doverModel.FK_ModuleField_FieldDataType", "FieldDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDataType>("doverModel.FK_ModuleField_FieldDataType", "FieldDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldDataType> FieldDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDataType>("doverModel.FK_ModuleField_FieldDataType", "FieldDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldDataType>("doverModel.FK_ModuleField_FieldDataType", "FieldDataType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Field_Module", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Field_Module", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Field_Module", "Module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Field_Module", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("doverModel.FK_Field_Module", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_FieldMetadata_Field", "FieldMetadata")]
        public EntityCollection<FieldMetadata> Metadata
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMetadata>("doverModel.FK_FieldMetadata_Field", "FieldMetadata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMetadata>("doverModel.FK_FieldMetadata_Field", "FieldMetadata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleRow_Field_Field", "Cell")]
        public EntityCollection<Cell> Cells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cell>("doverModel.FK_ModuleRow_Field_Field", "Cell");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cell>("doverModel.FK_ModuleRow_Field_Field", "Cell", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="FieldDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldDataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldDataType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FieldDataType CreateFieldDataType(global::System.Int32 id, global::System.String name)
        {
            FieldDataType fieldDataType = new FieldDataType();
            fieldDataType.ID = id;
            fieldDataType.Name = name;
            return fieldDataType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleField_FieldDataType", "Field")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("doverModel.FK_ModuleField_FieldDataType", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("doverModel.FK_ModuleField_FieldDataType", "Field", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="FieldMetadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldMetadata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldMetadata object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static FieldMetadata CreateFieldMetadata(global::System.Int32 id, global::System.String key)
        {
            FieldMetadata fieldMetadata = new FieldMetadata();
            fieldMetadata.Id = id;
            fieldMetadata.Key = key;
            return fieldMetadata;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_FieldMetadata_Field", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_FieldMetadata_Field", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_FieldMetadata_Field", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("doverModel.FK_FieldMetadata_Field", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("doverModel.FK_FieldMetadata_Field", "Field", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Module object.
        /// </summary>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="moduleName">Initial value of the ModuleName property.</param>
        /// <param name="moduleType">Initial value of the ModuleType property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Module CreateModule(global::System.String displayName, global::System.String moduleName, global::System.Int32 moduleType, global::System.Int32 id)
        {
            Module module = new Module();
            module.DisplayName = displayName;
            module.ModuleName = moduleName;
            module.ModuleType = moduleType;
            module.Id = id;
            return module;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleType
        {
            get
            {
                return _ModuleType;
            }
            set
            {
                OnModuleTypeChanging(value);
                ReportPropertyChanging("ModuleType");
                _ModuleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleType");
                OnModuleTypeChanged();
            }
        }
        private global::System.Int32 _ModuleType;
        partial void OnModuleTypeChanging(global::System.Int32 value);
        partial void OnModuleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Row_Module1", "Row")]
        public EntityCollection<Row> Rows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Row>("doverModel.FK_Row_Module1", "Row");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Row>("doverModel.FK_Row_Module1", "Row", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Field_Module", "Field")]
        public EntityCollection<Field> Fields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Field>("doverModel.FK_Field_Module", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Field>("doverModel.FK_Field_Module", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Module_aspnet_Users", "aspnet_Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("doverModel.FK_Module_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("doverModel.FK_Module_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("doverModel.FK_Module_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("doverModel.FK_Module_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Module_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Module_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Module_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Module_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("doverModel.FK_Module_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_UsageCounter_Module", "UsageCounter")]
        public EntityCollection<UsageCounter> UsageCounters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageCounter>("doverModel.FK_UsageCounter_Module", "UsageCounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageCounter>("doverModel.FK_UsageCounter_Module", "UsageCounter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceDate">Initial value of the ReferenceDate property.</param>
        /// <param name="paid">Initial value of the Paid property.</param>
        public static Payment CreatePayment(global::System.Int32 id, global::System.DateTime referenceDate, global::System.Boolean paid)
        {
            Payment payment = new Payment();
            payment.Id = id;
            payment.ReferenceDate = referenceDate;
            payment.Paid = paid;
            return payment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReferenceDate
        {
            get
            {
                return _ReferenceDate;
            }
            set
            {
                OnReferenceDateChanging(value);
                ReportPropertyChanging("ReferenceDate");
                _ReferenceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceDate");
                OnReferenceDateChanged();
            }
        }
        private global::System.DateTime _ReferenceDate;
        partial void OnReferenceDateChanging(global::System.DateTime value);
        partial void OnReferenceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private global::System.Boolean _Paid;
        partial void OnPaidChanging(global::System.Boolean value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransactStatus
        {
            get
            {
                return _TransactStatus;
            }
            set
            {
                OnTransactStatusChanging(value);
                ReportPropertyChanging("TransactStatus");
                _TransactStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransactStatus");
                OnTransactStatusChanged();
            }
        }
        private global::System.String _TransactStatus;
        partial void OnTransactStatusChanging(global::System.String value);
        partial void OnTransactStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Payment_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Payment_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Payment_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("doverModel.FK_Payment_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("doverModel.FK_Payment_Account", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Plan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="spaceLimit">Initial value of the SpaceLimit property.</param>
        /// <param name="bandwidthLimit">Initial value of the BandwidthLimit property.</param>
        /// <param name="aPIRequestLimit">Initial value of the APIRequestLimit property.</param>
        /// <param name="moduleLimit">Initial value of the ModuleLimit property.</param>
        public static Plan CreatePlan(global::System.Int32 id, global::System.String name, global::System.Double price, global::System.Int32 spaceLimit, global::System.Int32 bandwidthLimit, global::System.Int32 aPIRequestLimit, global::System.Int32 moduleLimit)
        {
            Plan plan = new Plan();
            plan.Id = id;
            plan.Name = name;
            plan.Price = price;
            plan.SpaceLimit = spaceLimit;
            plan.BandwidthLimit = bandwidthLimit;
            plan.APIRequestLimit = aPIRequestLimit;
            plan.ModuleLimit = moduleLimit;
            return plan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpaceLimit
        {
            get
            {
                return _SpaceLimit;
            }
            set
            {
                OnSpaceLimitChanging(value);
                ReportPropertyChanging("SpaceLimit");
                _SpaceLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpaceLimit");
                OnSpaceLimitChanged();
            }
        }
        private global::System.Int32 _SpaceLimit;
        partial void OnSpaceLimitChanging(global::System.Int32 value);
        partial void OnSpaceLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BandwidthLimit
        {
            get
            {
                return _BandwidthLimit;
            }
            set
            {
                OnBandwidthLimitChanging(value);
                ReportPropertyChanging("BandwidthLimit");
                _BandwidthLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BandwidthLimit");
                OnBandwidthLimitChanged();
            }
        }
        private global::System.Int32 _BandwidthLimit;
        partial void OnBandwidthLimitChanging(global::System.Int32 value);
        partial void OnBandwidthLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 APIRequestLimit
        {
            get
            {
                return _APIRequestLimit;
            }
            set
            {
                OnAPIRequestLimitChanging(value);
                ReportPropertyChanging("APIRequestLimit");
                _APIRequestLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APIRequestLimit");
                OnAPIRequestLimitChanged();
            }
        }
        private global::System.Int32 _APIRequestLimit;
        partial void OnAPIRequestLimitChanging(global::System.Int32 value);
        partial void OnAPIRequestLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleLimit
        {
            get
            {
                return _ModuleLimit;
            }
            set
            {
                OnModuleLimitChanging(value);
                ReportPropertyChanging("ModuleLimit");
                _ModuleLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleLimit");
                OnModuleLimitChanged();
            }
        }
        private global::System.Int32 _ModuleLimit;
        partial void OnModuleLimitChanging(global::System.Int32 value);
        partial void OnModuleLimitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Account_Plan", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("doverModel.FK_Account_Plan", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("doverModel.FK_Account_Plan", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="Row")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Row : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Row object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Row CreateRow(global::System.Int32 id)
        {
            Row row = new Row();
            row.ID = id;
            return row;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortIndex
        {
            get
            {
                return _SortIndex;
            }
            set
            {
                OnSortIndexChanging(value);
                ReportPropertyChanging("SortIndex");
                _SortIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortIndex");
                OnSortIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _SortIndex;
        partial void OnSortIndexChanging(Nullable<global::System.Int32> value);
        partial void OnSortIndexChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Row_Module1", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Row_Module1", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Row_Module1", "Module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_Row_Module1", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("doverModel.FK_Row_Module1", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_ModuleRow_Field_ModuleRow", "Cell")]
        public EntityCollection<Cell> Cells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cell>("doverModel.FK_ModuleRow_Field_ModuleRow", "Cell");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cell>("doverModel.FK_ModuleRow_Field_ModuleRow", "Cell", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="UsageCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsageCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsageCounter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="requestCount">Initial value of the RequestCount property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        public static UsageCounter CreateUsageCounter(global::System.Int32 id, global::System.Byte month, global::System.Int16 year, global::System.Int32 requestCount, global::System.Byte day)
        {
            UsageCounter usageCounter = new UsageCounter();
            usageCounter.Id = id;
            usageCounter.Month = month;
            usageCounter.Year = year;
            usageCounter.RequestCount = requestCount;
            usageCounter.Day = day;
            return usageCounter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Byte _Month;
        partial void OnMonthChanging(global::System.Byte value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestCount
        {
            get
            {
                return _RequestCount;
            }
            set
            {
                OnRequestCountChanging(value);
                ReportPropertyChanging("RequestCount");
                _RequestCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestCount");
                OnRequestCountChanged();
            }
        }
        private global::System.Int32 _RequestCount;
        partial void OnRequestCountChanging(global::System.Int32 value);
        partial void OnRequestCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Byte _Day;
        partial void OnDayChanging(global::System.Byte value);
        partial void OnDayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_UsageCounter_Module", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_UsageCounter_Module", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_UsageCounter_Module", "Module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("doverModel.FK_UsageCounter_Module", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("doverModel.FK_UsageCounter_Module", "Module", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="doverModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static User CreateUser(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            User user = new User();
            user.ApplicationId = applicationId;
            user.UserId = userId;
            user.UserName = userName;
            user.LoweredUserName = loweredUserName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "FK_Module_aspnet_Users", "Module")]
        public EntityCollection<Module> Modules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module>("doverModel.FK_Module_aspnet_Users", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module>("doverModel.FK_Module_aspnet_Users", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("doverModel", "Accountaspnet_Users", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("doverModel.Accountaspnet_Users", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("doverModel.Accountaspnet_Users", "Account", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="doverModel", Name="GetRowFieldBytes_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetRowFieldBytes_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetRowFieldBytes_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GetRowFieldBytes_Result CreateGetRowFieldBytes_Result(global::System.Int32 id)
        {
            GetRowFieldBytes_Result getRowFieldBytes_Result = new GetRowFieldBytes_Result();
            getRowFieldBytes_Result.ID = id;
            return getRowFieldBytes_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    }

    #endregion
    
}
